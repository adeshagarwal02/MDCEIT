head	1.26;
access;
symbols;
locks
	root:1.26; strict;
comment	@ * @;


1.26
date	2017.08.30.12.35.34;	author root;	state Exp;
branches;
next	1.25;

1.25
date	2017.08.30.12.02.20;	author root;	state Exp;
branches;
next	1.24;

1.24
date	2017.08.30.12.00.39;	author root;	state Exp;
branches;
next	1.23;

1.23
date	2017.08.30.11.58.21;	author root;	state Exp;
branches;
next	1.22;

1.22
date	2017.08.30.11.56.30;	author root;	state Exp;
branches;
next	1.21;

1.21
date	2017.08.30.11.20.19;	author root;	state Exp;
branches;
next	1.20;

1.20
date	2017.08.30.11.15.43;	author root;	state Exp;
branches;
next	1.19;

1.19
date	2017.08.30.11.10.50;	author root;	state Exp;
branches;
next	1.18;

1.18
date	2017.08.30.11.08.59;	author root;	state Exp;
branches;
next	1.17;

1.17
date	2017.08.30.11.05.11;	author root;	state Exp;
branches;
next	1.16;

1.16
date	2017.08.30.11.03.30;	author root;	state Exp;
branches;
next	1.15;

1.15
date	2017.08.30.10.02.53;	author root;	state Exp;
branches;
next	1.14;

1.14
date	2017.08.30.09.55.33;	author root;	state Exp;
branches;
next	1.13;

1.13
date	2017.07.19.18.41.17;	author root;	state Exp;
branches;
next	1.12;

1.12
date	2017.07.19.18.23.15;	author root;	state Exp;
branches;
next	1.11;

1.11
date	2017.07.19.18.11.00;	author root;	state Exp;
branches;
next	1.10;

1.10
date	2017.07.19.18.09.22;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2017.07.19.18.03.58;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2017.07.19.17.50.25;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2017.07.19.17.42.33;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2017.07.19.17.31.02;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2017.07.19.17.30.03;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2017.07.19.17.20.29;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2017.07.19.16.50.43;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2017.05.13.10.22.12;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2017.05.13.10.15.00;	author root;	state Exp;
branches;
next	;


desc
@@


1.26
log
@*** empty log message ***
@
text
@#include "header.h"
#include "declaration.h"
int decompression3(int fd, char *ma)
{
	int dfd,i;
        unsigned char byt,c;
        printf("start: %s\n",__func__);
        dfd=open("Decompressedfile",O_WRONLY|O_CREAT);
        while(read(fd,&c,1))
        {
                byt^=byt;
                i=(int)(c>>5);
                byt=findChar(i,ma);
		if(byt== '\0')
			break;
		write(dfd,&byt,1);
                c=c<<3;
                i=(int)(c>>5);
                byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
		c=c<<3;
		i=(int)(c>>5);
		read(fd,&c,1);
		i|=(int)(c>>7);
                byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
		c=c<<1;
		i=(int)(c>>5);
		byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
		c=c<<3;
		i=(int)(c>>5);
                byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
		c=c<<3;
		i=(int)(c>>5);
		read(fd,&c,1);
		i|=(int)(c>>6);
		byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
		c=c<<2;
		i=(int)(c>>5);
		byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
		c=c<<3;
		i=(int)(c>>5);
		byt=findChar(i,ma);
		if(byt== '\0')
			break;
                write(dfd,&byt,1);
        }
        close(dfd);
        printf("end: %s\n",__func__);
        return 0;

}
@


1.25
log
@*** empty log message ***
@
text
@a15 1
		printf("%d\n",i);
a21 1
		printf("%d\n",i);
a29 1
		printf("%d\n",i);
a35 1
		printf("%d\n",i);
a41 1
		printf("%d\n",i);
a45 1
		printf("c:%d\n",(int)c);
a49 1
		printf("%d\n",i);
a55 1
		printf("%d\n",i);
a57 1
		printf("c:%d",(int)c);
a61 1
		printf("%d\n",i);
@


1.24
log
@*** empty log message ***
@
text
@d51 1
a57 1
		printf("c:%d",(int)c);
@


1.23
log
@*** empty log message ***
@
text
@d57 1
a58 1
		printf("c:%d",(int)c);
@


1.22
log
@*** empty log message ***
@
text
@d58 1
@


1.21
log
@*** empty log message ***
@
text
@d65 1
@


1.20
log
@*** empty log message ***
@
text
@a49 1
		printf("%d\n",i);
d55 1
a58 1
		printf("%d\n",i);
d62 1
a66 1
		printf("%d\n",i);
d69 1
@


1.19
log
@*** empty log message ***
@
text
@d16 1
d23 1
d32 1
d39 1
d46 1
d67 1
a67 1
//		printf("%d\n",i);
@


1.18
log
@*** empty log message ***
@
text
@d45 1
@


1.17
log
@*** empty log message ***
@
text
@d53 1
d61 1
a61 1
		printf("%d\n",i);
@


1.16
log
@*** empty log message ***
@
text
@d60 1
a60 1
		printf("%d",i);
@


1.15
log
@*** empty log message ***
@
text
@d60 1
@


1.14
log
@*** empty log message ***
@
text
@d14 1
a14 1
		if(byt==EOF)
d20 1
a20 1
		if(byt== EOF)
d28 1
a28 1
		if(byt== EOF)
d34 1
a34 1
		if(byt== EOF)
d40 1
a40 1
		if(byt== EOF)
d48 1
a48 1
		if(byt== EOF)
d54 1
a54 1
		if(byt== EOF)
d60 1
a60 1
		if(byt== EOF)
@


1.13
log
@*** empty log message ***
@
text
@d14 1
a14 1
		if(byt=='\0')
d20 1
a20 1
		if(byt=='\0')
d28 1
a28 1
		if(byt=='\0')
d34 1
a34 1
		if(byt=='\0')
d40 1
a40 1
		if(byt=='\0')
d48 1
a48 1
		if(byt=='\0')
d54 1
a54 1
		if(byt=='\0')
d60 1
a60 1
		if(byt=='\0')
@


1.12
log
@*** empty log message ***
@
text
@d14 1
a14 1
		if(byt=='.')
d20 1
a20 1
		if(byt=='.')
d28 1
a28 1
		if(byt=='.')
d34 1
a34 1
		if(byt=='.')
d40 1
a40 1
		if(byt=='.')
d48 1
a48 1
		if(byt=='.')
d54 1
a54 1
		if(byt=='.')
d60 1
a60 1
		if(byt=='.')
@


1.11
log
@*** empty log message ***
@
text
@d14 1
a14 1
		if(byt=='\0')
d20 1
a20 1
		if(byt=='\0')
d28 1
a28 1
		if(byt=='\0')
d34 1
a34 1
		if(byt=='\0')
d40 1
a40 1
		if(byt=='\0')
d48 1
a48 1
		if(byt=='\0')
d54 1
a54 1
		if(byt=='\0')
d60 1
a60 1
		if(byt=='\0')
@


1.10
log
@*** empty log message ***
@
text
@d34 1
a34 1
		if(byt='\0')
@


1.9
log
@*** empty log message ***
@
text
@d14 1
a14 1
		if(i==strlen(ma))
d20 1
a20 1
		if(i==strlen(ma))
d28 1
a28 1
		if(i==strlen(ma))
d34 1
a34 1
		if(i==strlen(ma))
d40 1
a40 1
		if(i==strlen(ma))
d48 1
a48 1
		if(i==strlen(ma))
d54 1
a54 1
		if(i==strlen(ma))
d60 1
a60 1
		if(i==strlen(ma))
@


1.8
log
@*** empty log message ***
@
text
@a10 2
		if(c=='\0')
			break;
d14 3
a16 1
                write(dfd,&byt,1);
d20 2
d28 2
d34 2
d40 2
d48 2
d54 2
d60 2
@


1.7
log
@*** empty log message ***
@
text
@d11 2
@


1.6
log
@*** empty log message ***
@
text
@d6 1
a6 1
        unsigned char byt,c,ch;
d9 1
a9 1
        while(read(fd,&ch,1))
a10 1
		c=ch;
d21 1
a21 2
		read(fd,&ch,1);
		c=ch;
d35 1
a35 2
		read(fd,&ch,1);
		c=ch;
a46 1

@


1.5
log
@*** empty log message ***
@
text
@d38 1
a38 1
		ch=c;
@


1.4
log
@*** empty log message ***
@
text
@d20 2
a21 4
		c=ch;
		c=c<<6;
		c=c>>5;
		i=(int)c;
d36 1
a36 2
		c=c>>5;
		i=(int)c;
d39 1
a39 1
		i|=(int)(ch>>6);
d43 1
a43 1
		i=(int)(ch>>5);
d47 1
a47 1
		i=(int)(ch>>5);
@


1.3
log
@*** empty log message ***
@
text
@d6 1
a6 1
        unsigned char byt,c;
d9 1
a9 1
        while(read(fd,&c,1))
d11 1
d13 1
a13 1
                i=(int)(c>>4);
d16 2
a17 2
                c= c<<4;
                i=(int)(c>>4);
d19 33
@


1.2
log
@*** empty log message ***
@
text
@d5 19
a23 1
	printf("start: %s\n",__func__);
a24 1
	printf("end: %s\n",__func__);
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
int decompression4(int fd, char *ma)
@
