head	1.7;
access;
symbols;
locks
	root:1.7; strict;
comment	@ * @;


1.7
date	2017.05.13.13.32.11;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2017.05.13.10.15.03;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2017.05.13.09.27.42;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2017.05.13.09.25.55;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2017.05.13.08.40.45;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2017.05.13.08.37.25;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2017.05.08.06.30.27;	author root;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@#include"header.h"
#include"declaration.h"
int decompression()
{
	int cfd,eke,cl;
	char *ma;
	eke = open("encrkey",O_RDONLY);
	if(eke==-1)
	{
		perror("OPEN:");
		exit(EXIT_FAILURE);
	}
	printf("Star:%s\n",__func__);
	ma=getma(eke);
	cl=codelen(strlen(ma));
	close(eke);
	cfd = open("Compressedfile",O_RDONLY);	
	switch (cl)
	{
		case 2:
			decompression2(cfd,ma);
			break;
		case 3:
			decompression3(cfd,ma);
			break;
		case 4:
			decompression4(cfd,ma);
			break;
		case 5:
			decompression5(cfd,ma);
			break;
		case 6:
			decompression6(cfd,ma);
			break;
		case 7:
			decompression7(cfd,ma);
			break;

	}
	close(cfd);
	printf("END:%s\n",__func__);
	return 0;
}
@


1.6
log
@*** empty log message ***
@
text
@d8 1
a8 1
	if(eke == -1)
d11 1
a11 1
		exit("EXIT_FALIUR");
@


1.5
log
@*** empty log message ***
@
text
@d5 1
a5 1
	int dfd,eke;
a6 6
	dfd = open("Decompressed",O_WRONLY|O_CREAT);
	if(dfd == -1)
	{
		perror("OPEN:");
		exit("EXIT_FALIUR");
	}
d15 23
d39 2
a41 2
	close(eke);
	close(dfd);
@


1.4
log
@*** empty log message ***
@
text
@d8 1
a8 1
	if(dfd = -1)
d14 1
a14 1
	if(eke = -1)
@


1.3
log
@*** empty log message ***
@
text
@d8 5
d14 5
@


1.2
log
@\.
@
text
@d9 1
a9 1
	printf("Star:%s\n"__func__);
d12 1
a12 1
	printf("END:%s\n"__func__);
@


1.1
log
@Initial revision
@
text
@d5 10
a14 2
	printf("Start:Decompression\n");
	printf("END:Decompression\n");
@
