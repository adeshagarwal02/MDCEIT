head	1.30;
access;
symbols;
locks
	root:1.30; strict;
comment	@ * @;


1.30
date	2017.05.12.04.26.23;	author root;	state Exp;
branches;
next	1.29;

1.29
date	2017.05.12.04.22.12;	author root;	state Exp;
branches;
next	1.28;

1.28
date	2017.05.12.04.21.37;	author root;	state Exp;
branches;
next	1.27;

1.27
date	2017.05.12.04.10.30;	author root;	state Exp;
branches;
next	1.26;

1.26
date	2017.05.12.04.09.15;	author root;	state Exp;
branches;
next	1.25;

1.25
date	2017.05.12.04.07.39;	author root;	state Exp;
branches;
next	1.24;

1.24
date	2017.05.12.04.04.23;	author root;	state Exp;
branches;
next	1.23;

1.23
date	2017.05.12.04.03.59;	author root;	state Exp;
branches;
next	1.22;

1.22
date	2017.05.12.03.57.01;	author root;	state Exp;
branches;
next	1.21;

1.21
date	2017.05.12.03.46.50;	author root;	state Exp;
branches;
next	1.20;

1.20
date	2017.05.12.03.46.06;	author root;	state Exp;
branches;
next	1.19;

1.19
date	2017.05.12.03.43.34;	author root;	state Exp;
branches;
next	1.18;

1.18
date	2017.05.12.03.42.39;	author root;	state Exp;
branches;
next	1.17;

1.17
date	2017.05.11.15.53.21;	author root;	state Exp;
branches;
next	1.16;

1.16
date	2017.05.11.15.48.34;	author root;	state Exp;
branches;
next	1.15;

1.15
date	2017.05.11.15.45.45;	author root;	state Exp;
branches;
next	1.14;

1.14
date	2017.05.11.15.41.22;	author root;	state Exp;
branches;
next	1.13;

1.13
date	2017.05.11.15.39.51;	author root;	state Exp;
branches;
next	1.12;

1.12
date	2017.05.11.15.37.19;	author root;	state Exp;
branches;
next	1.11;

1.11
date	2017.05.11.15.35.49;	author root;	state Exp;
branches;
next	1.10;

1.10
date	2017.05.11.15.31.36;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2017.05.11.15.28.08;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2017.05.11.15.21.39;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2017.05.11.15.18.52;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2017.05.11.15.09.09;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2017.05.11.15.05.21;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2017.05.11.08.24.45;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2017.05.11.07.54.34;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2017.05.11.07.27.39;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2017.05.11.07.24.05;	author root;	state Exp;
branches;
next	;


desc
@this is an array crated
@


1.30
log
@*** empty log message ***
@
text
@#include"header.h"
#include"declaration.h"
char *creatMasterarray(int fd)
{
	char ch;
	int i;
	char *ma;
	printf("Creation Begain:\n");
	i=0;
	ma=NULL;
	while(read(fd,&ch,1))
	{

		 ma=realloc(ma,i+1);
		 if(unique(ch,ma))
		{
			
			*(ma+i) = ch;
			i++;	
		}
	}
	*(ma+i)='\0';
	printf("END:Creation\n");
	return ma;
	
}
@


1.29
log
@*** empty log message ***
@
text
@d15 1
a15 1
		 if(unique(ch,i,ma))
@


1.28
log
@*** empty log message ***
@
text
@a17 1
			printf("word:%s %d\n",ma,i);
@


1.27
log
@*** empty log message ***
@
text
@d20 2
a21 2
		}	i++;	
		
@


1.26
log
@*** empty log message ***
@
text
@a12 6
		if(i==0)
		{
			ma=realloc(ma,i+1);
			*(ma+i) = ch;
			i++;
		}	
d14 1
a14 1
			ma=realloc(ma,i+1);
a16 1
		//	ma=realloc(ma,i+1);
@


1.25
log
@*** empty log message ***
@
text
@d25 1
a25 1
			printf("word:%s\n",ma);
@


1.24
log
@*** empty log message ***
@
text
@d24 2
a28 1
		printf("word:%c\n",*(ma+i));
@


1.23
log
@*** empty log message ***
@
text
@d21 1
a21 1
		else if(unique(ch,i,ma))
@


1.22
log
@*** empty log message ***
@
text
@d19 2
d23 1
a23 1
			ma=realloc(ma,i+1);
@


1.21
log
@*** empty log message ***
@
text
@d25 1
a25 1
		printf("word:%c\n",(ma+i));
@


1.20
log
@*** empty log message ***
@
text
@d25 1
a25 1
		printf("word:%c\n",*(ma+i));
@


1.19
log
@*** empty log message ***
@
text
@d26 1
a26 1
	
d30 1
a30 1
	}
@


1.18
log
@*** empty log message ***
@
text
@d30 1
@


1.17
log
@*** empty log message ***
@
text
@a25 1
	}
@


1.16
log
@.[A
@
text
@d19 1
a19 1
		else if(unique(ch,i,*ma))
@


1.15
log
@*** empty log message ***
@
text
@d19 1
a19 1
		else if(unique(ch,i,ma))
@


1.14
log
@*** empty log message ***
@
text
@d25 1
a25 1
		printf("%d:%c\n",i,*(ma+i));
@


1.13
log
@*** empty log message ***
@
text
@d25 1
a25 1
		printf("word:%c\n",*(ma+i));
d27 1
a27 1

@


1.12
log
@*** empty log message ***
@
text
@d16 1
a16 1
			*(ma+i) =ch;
d22 1
a22 1
			*(ma+i) =ch;
@


1.11
log
@*** empty log message ***
@
text
@d25 1
a25 1
		printf("word:%c",*(ma+i));
@


1.10
log
@*** empty log message ***
@
text
@d25 1
@


1.9
log
@*** empty log message ***
@
text
@d13 1
a13 1
		if(i<1)
@


1.8
log
@*** empty log message ***
@
text
@d19 1
a19 1
		else if(unique(ch,i,ma+i))
@


1.7
log
@*** empty log message ***
@
text
@d13 1
a13 1
		if(i==0)
d17 2
a18 1
			i++;	
d24 1
a24 1
		}
@


1.6
log
@*** empty log message ***
@
text
@d17 1
a17 1
		}	i++;	
d23 1
d25 1
@


1.5
log
@*** empty log message ***
@
text
@d13 1
a13 1
		if(ma==NULL)
@


1.4
log
@*** empty log message ***
@
text
@d13 6
a18 1
		if(unique(ch,i,ma+i))
@


1.3
log
@this use for creation of array
@
text
@d13 5
a17 3
		ma=realloc(ma,i+1);
		*(ma+i) =ch;
		i++;	
@


1.2
log
@this is an creatMaster file
>
@
text
@d17 1
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
		*(ma+i) =ch
@
